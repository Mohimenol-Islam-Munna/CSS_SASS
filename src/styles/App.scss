/* ---------------------------------- SASS NOTE -----------------------------------  */
// imports in sass
@import "./sass_common_module/reset";
@import "./sass_common_module/variables";

// --------------------- Nested Style in SASS ---------------------
/* menu  */
.menu {
  background-color: cyan;
  padding: $sectionPadding;
  margin: $sectionMargin;

  ul {
    list-style-type: none;
    text-align: center;

    li {
      border: 1px solid gray;
      width: 28%;
      padding: 10px;
      display: inline-block;
      text-align: center;
      margin: 0px 10px;

      a {
        text-decoration: none;
      }
    }
  }
}

// --------------------- @mixin and @includ in SASS ---------------------
// mixin contain multiple css property and can be used in anywhere.

// create mixin
// @mixin mixin_name{
//   -----
// }

// called mixin
// @include mixin_name

// create mixin
@mixin paragraphMixin {
  width: 90%;
  background-color: lightgray;
  font-size: 14px;
  color: black;
  padding: $sectionPadding;
  margin: $sectionMargin;
}

.paragraph {
  @include paragraphMixin;
}

// mixin with parameter
@mixin paragraphContainerMixin($padding, $marginY, $marginX, $bgColor) {
  width: 85%;
  padding: $padding;
  margin: $marginY $marginX;
  border: 1px solid salmon;
  border-radius: 20px;
  background-color: $bgColor;
}

.paragraphContainer {
  @include paragraphContainerMixin(20px, 20px, auto, blueviolet);
}

// inheritance
// By inheritance we can apply the style of one selector (id, class etc) to another

.btn {
  padding: 10px 20px;
  text-align: center;
  color: white;
  margin-right: 10px;
  border: none;
  border-radius: 30px;
}

.btn_container {
  width: 85%;
  margin: auto;
}

// inherite the style of .btn selector
.btn_one {
  @extend .btn;
  background-color: blueviolet;
}

.btn_two {
  @extend .btn;
  background-color: greenyellow;
}

// conditional statement

@mixin titleMixin($type) {
  @if $type ==large {
    font-size: 24px;
  }

  @else if $type ==medium {
    font-size: 20px;
  }

  @else if $type ==small {
    font-size: 16px;
  }

  @else {
    font-size: 12px;
  }
}

.title1 {
  @include titleMixin(large);
  text-align: center;
  color: $primaryColor;
  background-color: blueviolet;
  padding: $sectionPadding;
}

// loop

.loop_container {
  width: 85%;
  padding: 20px 0px;
  margin: 20px auto;
  border: 1px solid salmon;
  background-color: blueviolet;
  border-radius: 30px;

  @for $i from 1 through 3 {
    .loop_item_#{$i} {
      width: ((100% / 6) * $i);
      border: 1px solid palegreen;
      margin-top: 15px;
      display: inline-block;
    }
  }
}

.each_container {
  width: 85%;
  padding: 20px 0px;
  margin: 20px auto;
  border: 1px solid salmon;
  background-color: blueviolet;
  border-radius: 30px;
}

$colors: red, green, blue;

@each $color in $colors {
  .#{$color} {
    display: inline-block;
    background-color: $color;
    border: 1px solid black;
    width: 33%;
    padding: 20px;
  }

  .#{$color} {
    display: inline-block;
    background-color: $color;
    border: 1px solid black;
    width: 33%;
    padding: 20px;
  }

  .#{$color} {
    display: inline-block;
    background-color: $color;
    border: 1px solid black;
    width: 33%;
    padding: 20px;
  }
}